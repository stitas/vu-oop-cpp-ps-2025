TEST HEAP CREATION

heap::BinaryMinHeap* bmh1 = new heap::BinaryMinHeap();
EXPECTED: 1
RESULT: 1
PASSED!

heap::BinaryMinHeap* bmh2 = new heap::BinaryMinHeap(*bmh1);
EXPECTED: 2
RESULT: 2
PASSED!

heap::BinaryMinHeap bmh3 = *bmh2;
EXPECTED: 3
RESULT: 3
PASSED!

TEST ELEMENT INSERTION

bmh1->insert(5);
EXPECTED: 5
RESULT: 5
PASSED!

bmh1->insert(4);
bmh1->insert(1);
bmh1->insert(6);
EXPECTED: 1 5 4 6
RESULT: 1 5 4 6
PASSED!

*bmh2 += 4;
*bmh2 += 1;
*bmh2 += 6;
EXPECTED: 1 4 6
RESULT: 1 4 6
PASSED!

TEST MIN ELEMENT EXTRACTION

int min = bmh1->extractMin();
EXPECTED: 1
RESULT: 1
PASSED!

EXPECTED: 4 5 6
RESULT: 4 5 6
PASSED!

int min = bmh1->extractMin();
EXPECTED: 4
RESULT: 4
PASSED!

EXPECTED: 5 6
RESULT: 5 6
PASSED!

TEST GET MIN ELEMENT

int min = bmh1->getMin();
EXPECTED: 5
RESULT: 5
PASSED!

EXPECTED: 5 6
RESULT: 5 6
PASSED!

TEST REMOVE ELEMENT

bmh2->remove(0);
EXPECTED: 1 4 6
RESULT: 1 4 6
PASSED!

bmh2->remove(4);
EXPECTED: 1 6
RESULT: 1 6
PASSED!

bmh2->insert(4);
bmh2->insert(4);
bmh2->insert(4);
EXPECTED: 1 4 4 6 4
RESULT: 1 4 4 6 4
PASSED!

bmh2->removeAll(4);
EXPECTED: 1 6
RESULT: 1 6
PASSED!

bmh2 -= 6;
EXPECTED: 1
RESULT: 1
PASSED!

TEST ELEMENT COUNT

bmh2->insert(4);
bmh2->insert(4);
bmh2->insert(4);
EXPECTED: 1 4 4 4
RESULT: 1 4 4 4
PASSED!

(*bmh2)[4];
EXPECTED: 3
RESULT: 3
PASSED!

TEST CLEAR HEAP

bmh1->clear()
EXPECTED: 1 (isEmpty)
RESULT: 1
PASSED!

!(*bmh2)
EXPECTED: 1 (isEmpty)
RESULT: 1
PASSED!

TEST DELETE HEAP

delete bmh1;
EXPECTED: 2 (object count)
RESULT: 2
PASSED!

delete bmh2;
EXPECTED: 1 (object count)
RESULT: 1
PASSED!

ALL TEST CASES PASSED !
